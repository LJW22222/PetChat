name: Deploy with Docker Compose

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
    steps:
      - name: 현재 저장소 코드 Clone
        uses: actions/checkout@v4

      - name: .env 파일 생성
        run: |
          cat <<EOF > .env
          SERVER_PORT=$SERVER_PORT
          DB_URL=$DB_URL
          DB_USERNAME=$DB_USERNAME
          DB_PASSWORD=$DB_PASSWORD
          GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
          GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
          KAKAO_CLIENT_ID=$KAKAO_CLIENT_ID
          KAKAO_CLIENT_SECRET=$KAKAO_CLIENT_SECRET
          JWT_SECRET=$JWT_SECRET
          JWT_EXPIRATION=$JWT_EXPIRATION
          EOF

      - name: 서버 디렉토리 초기화
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            rm -rf ~/airo
            mkdir -p ~/airo

      - name: 현재 코드 및 파일들을 서버로 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "."
          target: "~/airo"
          overwrite: true
          debug: true

      - name: SSH를 통한 배포 시작 [ docker compose 실행 ]
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          command_timeout: '60m'
          script: |
            set -e
            cd ~/airo
            docker compose down --volumes --remove-orphans || true
            docker builder prune -af || true
            docker image prune -af --filter "until=24h" || true
            docker compose build --no-cache
            docker compose up -d
